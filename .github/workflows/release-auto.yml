name: Release • auto‑semver + Docker + Docs

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options: [patch, minor, major, prerelease]

env:
  REGISTRY: docker.io
  IMAGE_NAME: thedatacarpenter/airflow-copilot   # change to ghcr.io/… if GHCR

jobs:

  calc-version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.semver.outputs.new_tag }}
      major:   ${{ steps.semver.outputs.major }}
      minor:   ${{ steps.semver.outputs.minor }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Get latest tag & bump
        id: semver
        run: |
          latest="$(git tag --sort=-v:refname | head -n1)"
          latest="${latest:-v0.0.0}"
          echo "Latest tag = $latest"
          bump="${{ github.event.inputs.bump }}"

          # Use npm's semver parser for convenience
          npm install semver -g >/dev/null 2>&1
          next=$(node - <<'JS'
            const semver=require("semver");
            const latest=process.env.LATEST.replace(/^v/,"");
            const bump=process.env.BUMP;
            const next = semver.inc(latest,bump);
            console.log(next);
          JS
          )
          echo "Next = v$next"

          echo "new_tag=v$next"   >> $GITHUB_OUTPUT
          echo "major=${next%%.*}" >> $GITHUB_OUTPUT
          echo "minor=${next%.*}" >> $GITHUB_OUTPUT

  create-release:
    needs: calc-version
    runs-on: ubuntu-latest
    permissions: { contents: write, packages: write }
    outputs:
      tag: ${{ needs.calc-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Create Git tag
        run: |
          git tag -a "${{ needs.calc-version.outputs.new_tag }}" -m "Release ${{ needs.calc-version.outputs.new_tag }}"
          git push origin "${{ needs.calc-version.outputs.new_tag }}"

      - name: Create GitHub Release (changelog auto)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.calc-version.outputs.new_tag }}
          generate_release_notes: true

  build-docker:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.create-release.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.calc-version.outputs.minor }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.calc-version.outputs.major }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trivy scan
        uses: aquasecurity/trivy-action@v0.13.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.create-release.outputs.tag }}

  publish-docs:
    needs: build-docker
    runs-on: ubuntu-latest
    permissions:
      pages: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with: { python-version: '3.11' }
      - run: pip install mkdocs-material

      - name: Deploy MkDocs
        env:
          GH_TOKEN: ${{ secrets.GH_PAGES_TOKEN || github.token }}
        run: mkdocs gh-deploy --force --message "Docs for ${{ needs.create-release.outputs.tag }}"
