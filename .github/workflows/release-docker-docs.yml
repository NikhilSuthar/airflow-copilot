name: Release • Docker + Docs

on:
  push:
    branches:
      - 'release/v*.*.*'  # e.g. release/v1.4.0

env:
  REGISTRY: docker.io
  IMAGE_NAME: thedatacarpenter/airflow-copilot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # ---- Get version from branch name "release/vX.Y.Z" ----
      - name: Extract version
        id: vars
        run: |
          raw="${{ github.ref_name }}"            # release/v1.4.0
          ver="${raw#release/}"                   # v1.4.0
          ver="${ver#v}"                          # 1.4.0
          echo "VERSION=$ver"           >> $GITHUB_OUTPUT
          echo "MINOR=${ver%.*}"        >> $GITHUB_OUTPUT  # 1.4
          echo "MAJOR=${ver%%.*}"       >> $GITHUB_OUTPUT  # 1
      - name: Log version
        run: echo "Will tag Docker image with ${{ steps.vars.outputs.VERSION }}"

      # ---- Login to Docker Hub ----
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ---- Build & Push ----
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.MINOR }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.MAJOR }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      # ---- Optional: scan for vulnerabilities ----
      - name: Trivy scan
        uses: aquasecurity/trivy-action@v0.13.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.VERSION }}

  publish-docs:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with: { python-version: '3.11' }

      - name: Install MkDocs Material
        run: pip install mkdocs-material

      - name: Build & Deploy Docs (gh-pages)
        env:
          GH_TOKEN: ${{ secrets.GH_PAGES_TOKEN || github.token }}
        run: |
          git config --global user.email "ci@github.com"
          git config --global user.name  "GitHub Actions"
          mkdocs gh-deploy --force --message "Publish docs for ${{ steps.vars.outputs.VERSION }}"
